<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.crevill.member.MemberMapper">
	
	<select id="checkExistCellPhone" parameterType="kr.co.crevill.member.MemberDto" resultType="Integer">
        SELECT COUNT(*)
          FROM MEMBER_PARENT
         WHERE CELL_PHONE = #{parentCellPhone}
         <if test="cellPhone != null and cellPhone != ''">
           AND CELL_PHONE != #{cellPhone}
         </if>
         <if test="storeId != null and storeId != 'CST00001'.toString()">
           AND STORE_ID = #{storeId}
         </if>
    </select>
	
	<select id="selectMemberCount" parameterType="kr.co.crevill.member.MemberDto" resultType="Integer">
       	SELECT COUNT(*)
          FROM (
		        SELECT A.NAME,
		        	   A.BIRTHDAY PARENT_BIRTHDAY,
		        	   A.SEX PARENT_SEX,
		               CASE WHEN LENGTH(A.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,4),'-',SUBSTRING(A.CELL_PHONE,8,4))
		            	    ELSE CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,3),'-',SUBSTRING(A.CELL_PHONE,7,4)) END AS CELL_PHONE,
		               A.EMAIL,
		               REPLACE(A.ADDRESS,'|','') ADDRESS,
					   SUBSTRING_INDEX(A.ADDRESS, '|', 1) ROAD_ADDRESS,
					   CASE WHEN INSTR(A.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(A.ADDRESS, '|', -1)
					        ELSE '' END AS DETAIL_ADDRESS,
		               A.QR_CODE,
		               DATE_FORMAT(A.REG_DATE, '%Y/%m/%d') REG_DATE,
		               CASE WHEN A.STATUS = 'A' THEN 'Active'
		            		ELSE 'Inactive' END AS STATUS,
		               (SELECT COUNT(*) FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = A.CELL_PHONE) VOUCHER_COUNT,
		               IFNULL((SELECT SUBSTRING_INDEX(S.STORE_NAME, ' ', - 1) FROM STORE S WHERE S.STORE_ID = (SELECT STORE_ID FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = A.CELL_PHONE LIMIT 1)),'바우처없음')  VOUCHER_STORE_NAME,
		               B.STORE_NAME
		          FROM MEMBER_PARENT A LEFT OUTER JOIN VOUCHER_SALE C
		                          ON A.CELL_PHONE = C.BUY_CELL_PHONE,
		               STORE B
		         WHERE A.STORE_ID = B.STORE_ID 
		          <if test="storeId != null and storeId != 'CST00001'.toString()">
		           AND A.STORE_ID = #{storeId}
		         </if>
		         UNION ALL
		        SELECT D.NAME,
					   D.BIRTHDAY PARENT_BIRTHDAY,
					   D.SEX PARENT_SEX,
				       CASE WHEN LENGTH(D.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(D.CELL_PHONE,1,3),'-',SUBSTRING(D.CELL_PHONE,4,4),'-',SUBSTRING(D.CELL_PHONE,8,4))
				    	    ELSE CONCAT(SUBSTRING(D.CELL_PHONE,1,3),'-',SUBSTRING(D.CELL_PHONE,4,3),'-',SUBSTRING(D.CELL_PHONE,7,4)) END AS CELL_PHONE,
				       D.EMAIL,
				       REPLACE(D.ADDRESS,'|','') ADDRESS,
					   SUBSTRING_INDEX(D.ADDRESS, '|', 1) ROAD_ADDRESS,
					   CASE WHEN INSTR(D.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(D.ADDRESS, '|', -1)
					        ELSE '' END AS DETAIL_ADDRESS,
				       D.QR_CODE,
				       DATE_FORMAT(D.REG_DATE, '%Y/%m/%d') REG_DATE,
				       CASE WHEN D.STATUS = 'A' THEN 'Active'
				    		ELSE 'Inactive' END AS STATUS,
				       (SELECT COUNT(*) FROM VOUCHER_SALE WHERE VOUCHER_SALE.BUY_CELL_PHONE = D.CELL_PHONE) VOUCHER_COUNT,
				       IFNULL((SELECT SUBSTRING_INDEX(S.STORE_NAME, ' ', - 1) FROM STORE S WHERE S.STORE_ID = (SELECT STORE_ID FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = D.CELL_PHONE LIMIT 1)),'바우처없음')  VOUCHER_STORE_NAME,
				       E.STORE_NAME
				  FROM VOUCHER_SALE A,
				       VOUCHER B,
				       VOUCHER_USE_VIEW C,
				       MEMBER_PARENT D,
				       STORE E
				 WHERE A.VOUCHER_NO = B.VOUCHER_NO 
				   <if test="storeId != null and storeId != 'CST00001'.toString()">
		           AND B.STORE_ID = #{storeId}
		           </if>
				   AND B.VOUCHER_NO = C.VOUCHER_NO 
				   AND C.TIME_LEFT_HOUR <![CDATA[ > ]]> 0
				   AND A.BUY_CELL_PHONE = D.CELL_PHONE 
				   AND D.STORE_ID = E.STORE_ID
		   		) SUB
    </select>
	
    <select id="selectMemberList" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT SUB.NAME,
        	   SUB.PARENT_BIRTHDAY,
        	   SUB.PARENT_SEX,
               SUB.CELL_PHONE,
               SUB.EMAIL,
               SUB.ADDRESS,
			   SUB.ROAD_ADDRESS,
			   SUB.DETAIL_ADDRESS,
               SUB.QR_CODE,
               SUB.REG_DATE,
               SUB.STATUS,
               SUB.VOUCHER_COUNT,
               SUB.VOUCHER_STORE_NAME,
               SUB.STORE_NAME
          FROM (
		        SELECT A.NAME,
		        	   A.BIRTHDAY PARENT_BIRTHDAY,
		        	   A.SEX PARENT_SEX,
		               CASE WHEN LENGTH(A.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,4),'-',SUBSTRING(A.CELL_PHONE,8,4))
		            	    ELSE CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,3),'-',SUBSTRING(A.CELL_PHONE,7,4)) END AS CELL_PHONE,
		               A.EMAIL,
		               REPLACE(A.ADDRESS,'|','') ADDRESS,
					   SUBSTRING_INDEX(A.ADDRESS, '|', 1) ROAD_ADDRESS,
					   CASE WHEN INSTR(A.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(A.ADDRESS, '|', -1)
					        ELSE '' END AS DETAIL_ADDRESS,
		               A.QR_CODE,
		               DATE_FORMAT(A.REG_DATE, '%Y/%m/%d') REG_DATE,
		               CASE WHEN A.STATUS = 'A' THEN 'Active'
		            		ELSE 'Inactive' END AS STATUS,
		               (SELECT COUNT(*) FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = A.CELL_PHONE) VOUCHER_COUNT,
		               IFNULL((SELECT SUBSTRING_INDEX(S.STORE_NAME, ' ', - 1) FROM STORE S WHERE S.STORE_ID = (SELECT STORE_ID FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = A.CELL_PHONE LIMIT 1)),'바우처없음')  VOUCHER_STORE_NAME,
		               B.STORE_NAME
		          FROM MEMBER_PARENT A LEFT OUTER JOIN VOUCHER_SALE C
		                          ON A.CELL_PHONE = C.BUY_CELL_PHONE,
		               STORE B
		         WHERE A.STORE_ID = B.STORE_ID 
		          <if test="storeId != null and storeId != 'CST00001'.toString()">
		           AND A.STORE_ID = #{storeId}
		         </if>
		         UNION ALL
		        SELECT D.NAME,
					   D.BIRTHDAY PARENT_BIRTHDAY,
					   D.SEX PARENT_SEX,
				       CASE WHEN LENGTH(D.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(D.CELL_PHONE,1,3),'-',SUBSTRING(D.CELL_PHONE,4,4),'-',SUBSTRING(D.CELL_PHONE,8,4))
				    	    ELSE CONCAT(SUBSTRING(D.CELL_PHONE,1,3),'-',SUBSTRING(D.CELL_PHONE,4,3),'-',SUBSTRING(D.CELL_PHONE,7,4)) END AS CELL_PHONE,
				       D.EMAIL,
				       REPLACE(D.ADDRESS,'|','') ADDRESS,
					   SUBSTRING_INDEX(D.ADDRESS, '|', 1) ROAD_ADDRESS,
					   CASE WHEN INSTR(D.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(D.ADDRESS, '|', -1)
					        ELSE '' END AS DETAIL_ADDRESS,
				       D.QR_CODE,
				       DATE_FORMAT(D.REG_DATE, '%Y/%m/%d') REG_DATE,
				       CASE WHEN D.STATUS = 'A' THEN 'Active'
				    		ELSE 'Inactive' END AS STATUS,
				       (SELECT COUNT(*) FROM VOUCHER_SALE WHERE VOUCHER_SALE.BUY_CELL_PHONE = D.CELL_PHONE) VOUCHER_COUNT,
				       IFNULL((SELECT SUBSTRING_INDEX(S.STORE_NAME, ' ', - 1) FROM STORE S WHERE S.STORE_ID = (SELECT STORE_ID FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = D.CELL_PHONE LIMIT 1)),'바우처없음')  VOUCHER_STORE_NAME,
				       E.STORE_NAME
				  FROM VOUCHER_SALE A,
				       VOUCHER B,
				       VOUCHER_USE_VIEW C,
				       MEMBER_PARENT D,
				       STORE E
				 WHERE A.VOUCHER_NO = B.VOUCHER_NO 
				   <if test="storeId != null and storeId != 'CST00001'.toString()">
		           AND B.STORE_ID = #{storeId}
		           </if>
				   AND B.VOUCHER_NO = C.VOUCHER_NO 
				   AND C.TIME_LEFT_HOUR <![CDATA[ > ]]> 0
				   AND A.BUY_CELL_PHONE = D.CELL_PHONE 
				   AND D.STORE_ID = E.STORE_ID
		   		) SUB
	     GROUP BY CELL_PHONE		   		
    </select>

    <select id="selectMemberInfo" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT A.NAME,
        	   A.BIRTHDAY PARENT_BIRTHDAY,
        	   A.SEX PARENT_SEX,
               CASE WHEN LENGTH(A.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,4),'-',SUBSTRING(A.CELL_PHONE,8,4))
            	    ELSE CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,3),'-',SUBSTRING(A.CELL_PHONE,7,4)) END AS CELL_PHONE,
               A.EMAIL,
               REPLACE(A.ADDRESS,'|','') ADDRESS,
			   SUBSTRING_INDEX(A.ADDRESS, '|', 1) ROAD_ADDRESS,
			   CASE WHEN INSTR(A.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(A.ADDRESS, '|', -1)
			        ELSE '' END AS DETAIL_ADDRESS,
               A.QR_CODE,
               B.NAME CHILD_NAME,
               B.BIRTHDAY,
               B.SEX,
               (SELECT GROUP_CONCAT(C.LEARNING_GRADE SEPARATOR ',') FROM MEMBER_CHILDREN_GRADE C WHERE C.PARENT_CELL_PHONE = A.CELL_PHONE AND C.CHILDREN_NAME = B.NAME) LEARNING_GRADE,
               A.STORE_ID
          FROM MEMBER_PARENT A,
               MEMBER_CHILDREN B
         WHERE A.CELL_PHONE = B.PARENT_CELL_PHONE
           <if test="storeId != null and storeId != 'CST00001'.toString()">
           AND A.STORE_ID = #{storeId}
           </if>
           <if test="qrCode != null and qrCode != ''">
           AND A.QR_CODE = #{qrCode}
           </if>
           <if test="name != null and name != ''">
           AND A.NAME = #{name}
           </if>
           <if test="cellPhone != null and cellPhone != ''">
           AND A.CELL_PHONE = #{cellPhone}
           </if>
    </select>
	
	<select id="getMemberInfo" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT NAME,
        	   BIRTHDAY,
        	   SEX,	
               CELL_PHONE,
               EMAIL,
               REPLACE(ADDRESS,'|','') ADDRESS,
               QR_CODE,
               STORE_ID
          FROM MEMBER_PARENT
        <where>
           <if test="qrCode != null and qrCode != ''">
           AND QR_CODE = #{qrCode}
           </if>
           <if test="name != null and name != ''">
           AND NAME = #{name}
           </if>
           <if test="cellPhone != null and cellPhone != ''">
           AND CELL_PHONE = #{cellPhone}
           </if>
        </where>
    </select>
	
	<select id="selectChildList" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT A.NAME,
        	   A.BIRTHDAY,
        	   A.SEX,	
               A.CELL_PHONE,
               A.EMAIL,
               REPLACE(A.ADDRESS,'|','') ADDRESS,
               A.QR_CODE,
               A.STORE_ID,
               B.NAME CHILD_NAME
          FROM MEMBER_PARENT A,
               MEMBER_CHILDREN B
        <where>
           <if test="cellPhone != null and cellPhone != ''">
           AND A.CELL_PHONE = #{cellPhone}
           </if>
           AND A.CELL_PHONE = B.PARENT_CELL_PHONE
        </where>
    </select>
	
    <insert id="insertMemberParent" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_PARENT (
    								NAME,
    								BIRTHDAY,
    								SEX,
    								CELL_PHONE,
    								EMAIL,
    								ADDRESS,
    								QR_CODE,
									REG_DATE,
									REG_ID,
									STORE_ID    								
    							   )
							VALUES (
									#{parentName},
									#{parentBirthday},
									#{parentSex},
									#{cellPhone},
									#{email},
									#{address},
									QR_SEQ_NEXTVAL(),
									NOW(),
									#{regId},
									#{storeId}
								   )
    </insert>

	<insert id="insertMemberChildren" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_CHILDREN (
    								PARENT_NAME,
    								PARENT_CELL_PHONE,
    								NAME,
    								BIRTHDAY,
    								SEX,
    								REG_ID,
    								REG_DATE
    							   )
							VALUES (
									#{parentName},
									#{cellPhone},
									#{childName},
									#{birthday},
									#{sex},
									#{regId},
									NOW()
								   )
    </insert>
	
	<insert id="insertMemberChildrenGrade" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_CHILDREN_GRADE (
    								       PARENT_CELL_PHONE,
									       CHILDREN_NAME,
									       LEARNING_GRADE,
    								       REG_ID,
    								       REG_DATE
    							          )
								   VALUES (
										   #{cellPhone},
										   #{childName},
										   #{learningGrade},
										   #{regId},
										   NOW()
									      )
    </insert>
	
	
	
	<update id="updateMemberParent" parameterType="kr.co.crevill.member.MemberDto">
    	UPDATE MEMBER_PARENT 
    	  <set>
	       	  <if test="parentName != null">NAME = #{parentName},</if>
	       	  <if test="parentBirthday != null">BIRTHDAY = #{parentBirthday},</if>
	       	  <if test="parentSex != null">SEX = #{parentSex},</if>
	       	  <if test="cellPhone != null">CELL_PHONE = #{cellPhone},</if>
	       	  <if test="email != null">EMAIL = #{email},</if>
	       	  <if test="address != null">ADDRESS = #{address},</if>
	       	  <if test="storeId != null">STORE_ID = #{storeId},</if>
	       	  UPD_ID = #{updId},
			  UPD_DATE = NOW()
       	  </set>
        WHERE QR_CODE = #{qrCode} 
    </update>
	
	<delete id="deleteMemberParent">
		DELETE
		  FROM MEMBER_PARENT
		 WHERE QR_CODE = #{qrCode}  
	</delete>
	
	<delete id="deleteMemberChildren">
		DELETE 
		  FROM MEMBER_CHILDREN
		 WHERE PARENT_CELL_PHONE = #{cellPhone} 
	</delete>
	
	<delete id="deleteMemberChildrenGrade">
		DELETE 
		  FROM MEMBER_CHILDREN_GRADE
		 WHERE PARENT_CELL_PHONE = #{cellPhone} 
	</delete>
	
	<select id="selectMemberVoucherInfo" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT A.NAME,
        	   A.BIRTHDAY PARENT_BIRTHDAY,
        	   A.SEX PARENT_SEX,
               CASE WHEN LENGTH(A.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,4),'-',SUBSTRING(A.CELL_PHONE,8,4))
            	    ELSE CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,3),'-',SUBSTRING(A.CELL_PHONE,7,4)) END AS CELL_PHONE,
               A.EMAIL,
               REPLACE(A.ADDRESS,'|','') ADDRESS,
			   SUBSTRING_INDEX(A.ADDRESS, '|', 1) ROAD_ADDRESS,
			   CASE WHEN INSTR(A.ADDRESS,'|') > 0 THEN SUBSTRING_INDEX(A.ADDRESS, '|', -1)
			        ELSE '' END AS DETAIL_ADDRESS,
               CASE WHEN A.STORE_ID = 'MOBILE' THEN '모바일'
                    ELSE '바우처' 
                    END AS MEMBER_TYPE,
               A.QR_CODE,
               B.NAME CHILD_NAME,
               B.BIRTHDAY,
               B.SEX,
               (SELECT GROUP_CONCAT(C.LEARNING_GRADE SEPARATOR ',') FROM MEMBER_CHILDREN_GRADE C WHERE C.PARENT_CELL_PHONE = A.CELL_PHONE AND C.CHILDREN_NAME = B.NAME) LEARNING_GRADE,
               A.STORE_ID
          FROM MEMBER_PARENT A,
               MEMBER_CHILDREN B
         WHERE A.CELL_PHONE = #{cellPhone}
           <if test="storeId != null and storeId != 'CST00001'.toString()">
           AND A.STORE_ID = #{storeId}
           </if>
           AND A.CELL_PHONE = B.PARENT_CELL_PHONE
      GROUP BY A.CELL_PHONE, B.NAME
    </select>
	
</mapper>