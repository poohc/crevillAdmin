<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.crevill.member.MemberMapper">
	
	<select id="checkExistCellPhone" parameterType="kr.co.crevill.member.MemberDto" resultType="Integer">
        SELECT COUNT(*)
          FROM MEMBER_PARENT
         WHERE CELL_PHONE = #{parentCellPhone}
         <if test="cellPhone != null and cellPhone != ''">
           AND CELL_PHONE != #{cellPhone}
         </if>
         <if test="storeId != null and storeId != 'CST00001'.toString()">
           AND STORE_ID = #{storeId}
         </if>
    </select>
	
	<select id="selectMemberCount" parameterType="kr.co.crevill.member.MemberDto" resultType="Integer">
        SELECT COUNT(*)
          FROM MEMBER_PARENT
    </select>
	
    <select id="selectMemberList" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT A.NAME,
               CASE WHEN LENGTH(A.CELL_PHONE) = 11 THEN CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,4),'-',SUBSTRING(A.CELL_PHONE,8,4))
            	    ELSE CONCAT(SUBSTRING(A.CELL_PHONE,1,3),'-',SUBSTRING(A.CELL_PHONE,4,3),'-',SUBSTRING(A.CELL_PHONE,7,4)) END AS CELL_PHONE,
               A.EMAIL,
               A.ADDRESS,
               A.QR_CODE,
               DATE_FORMAT(A.REG_DATE, '%Y/%m/%d') REG_DATE,
               CASE WHEN A.STATUS = 'A' THEN 'Active'
            		ELSE 'Inactive' END AS STATUS,
               (SELECT COUNT(*) FROM VOUCHER_SALE WHERE BUY_CELL_PHONE = A.CELL_PHONE) VOUCHER_COUNT,
               B.STORE_NAME
          FROM MEMBER_PARENT A,
               STORE B
        <where>
           AND A.STORE_ID = B.STORE_ID 
          <if test="storeId != null and storeId != 'CST00001'.toString()">
           AND A.STORE_ID = #{storeId}
         </if>
       </where>
    </select>

    <select id="selectMemberInfo" parameterType="kr.co.crevill.member.MemberDto" resultType="kr.co.crevill.member.MemberVo">
        SELECT A.NAME,
               A.CELL_PHONE,
               A.EMAIL,
               A.ADDRESS,
               A.QR_CODE,
               B.NAME CHILD_NAME,
               B.BIRTHDAY,
               B.SEX,
               (SELECT GROUP_CONCAT(C.LEARNING_GRADE SEPARATOR ',') FROM MEMBER_CHILDREN_GRADE C WHERE C.PARENT_CELL_PHONE = A.CELL_PHONE AND C.CHILDREN_NAME = B.NAME) LEARNING_GRADE
          FROM MEMBER_PARENT A,
               MEMBER_CHILDREN B
         WHERE A.CELL_PHONE = B.PARENT_CELL_PHONE
           <if test="qrCode != null and qrCode != ''">
           AND A.QR_CODE = #{qrCode}
           </if>
           <if test="name != null and name != ''">
           AND A.NAME = #{name}
           </if>
           <if test="cellPhone != null and cellPhone != ''">
           AND A.CELL_PHONE = #{cellPhone}
           </if>
    </select>
	
    <insert id="insertMemberParent" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_PARENT (
    								NAME,
    								CELL_PHONE,
    								EMAIL,
    								ADDRESS,
    								QR_CODE,
									REG_DATE,
									REG_ID,
									STORE_ID    								
    							   )
							VALUES (
									#{parentName},
									#{cellPhone},
									#{email},
									#{address},
									QR_SEQ_NEXTVAL(),
									NOW(),
									#{regId},
									#{storeId}
								   )
    </insert>

	<insert id="insertMemberChildren" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_CHILDREN (
    								PARENT_NAME,
    								PARENT_CELL_PHONE,
    								NAME,
    								BIRTHDAY,
    								SEX,
    								REG_ID,
    								REG_DATE
    							   )
							VALUES (
									#{parentName},
									#{cellPhone},
									#{childName},
									#{birthday},
									#{sex},
									#{regId},
									NOW()
								   )
    </insert>
	
	<insert id="insertMemberChildrenGrade" parameterType="kr.co.crevill.member.MemberDto">
    	INSERT INTO MEMBER_CHILDREN_GRADE (
    								       PARENT_CELL_PHONE,
									       CHILDREN_NAME,
									       LEARNING_GRADE,
    								       REG_ID,
    								       REG_DATE
    							          )
								   VALUES (
										   #{cellPhone},
										   #{childName},
										   #{learningGrade},
										   #{regId},
										   NOW()
									      )
    </insert>
	
	
	
	<update id="updateMemberParent" parameterType="kr.co.crevill.member.MemberDto">
    	UPDATE MEMBER_PARENT 
    	  <set>
	       	  <if test="parentName != null">NAME = #{parentName},</if>
	       	  <if test="cellPhone != null">CELL_PHONE = #{cellPhone},</if>
	       	  <if test="email != null">EMAIL = #{email},</if>
	       	  <if test="address != null">ADDRESS = #{address},</if>
	       	  UPD_ID = #{updId},
			  UPD_DATE = NOW()
       	  </set>
        WHERE QR_CODE = #{qrCode} 
    </update>
	
	<delete id="deleteMemberParent">
		DELETE
		  FROM MEMBER_PARENT
		 WHERE QR_CODE = #{qrCode}  
	</delete>
	
	<delete id="deleteMemberChildren">
		DELETE 
		  FROM MEMBER_CHILDREN
		 WHERE PARENT_CELL_PHONE = #{cellPhone} 
	</delete>
	
	<delete id="deleteMemberChildrenGrade">
		DELETE 
		  FROM MEMBER_CHILDREN_GRADE
		 WHERE PARENT_CELL_PHONE = #{cellPhone} 
	</delete>
	
</mapper>